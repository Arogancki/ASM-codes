                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon May 09 17:19:17 2016
                              5 ;--------------------------------------------------------
                              6 	.module 10v3
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TablicaZnakow
                             13 	.globl _tablicaAnod
                             14 	.globl _timer1
                             15 	.globl _timer0
                             16 	.globl _main
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _PS
                             26 	.globl _PT1
                             27 	.globl _PX1
                             28 	.globl _PT0
                             29 	.globl _PX0
                             30 	.globl _RD
                             31 	.globl _WR
                             32 	.globl _T1
                             33 	.globl _T0
                             34 	.globl _INT1
                             35 	.globl _INT0
                             36 	.globl _TXD
                             37 	.globl _RXD
                             38 	.globl _P3_7
                             39 	.globl _P3_6
                             40 	.globl _P3_5
                             41 	.globl _P3_4
                             42 	.globl _P3_3
                             43 	.globl _P3_2
                             44 	.globl _P3_1
                             45 	.globl _P3_0
                             46 	.globl _EA
                             47 	.globl _ES
                             48 	.globl _ET1
                             49 	.globl _EX1
                             50 	.globl _ET0
                             51 	.globl _EX0
                             52 	.globl _P2_7
                             53 	.globl _P2_6
                             54 	.globl _P2_5
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _SM0
                             61 	.globl _SM1
                             62 	.globl _SM2
                             63 	.globl _REN
                             64 	.globl _TB8
                             65 	.globl _RB8
                             66 	.globl _TI
                             67 	.globl _RI
                             68 	.globl _P1_7
                             69 	.globl _P1_6
                             70 	.globl _P1_5
                             71 	.globl _P1_4
                             72 	.globl _P1_3
                             73 	.globl _P1_2
                             74 	.globl _P1_1
                             75 	.globl _P1_0
                             76 	.globl _TF1
                             77 	.globl _TR1
                             78 	.globl _TF0
                             79 	.globl _TR0
                             80 	.globl _IE1
                             81 	.globl _IT1
                             82 	.globl _IE0
                             83 	.globl _IT0
                             84 	.globl _P0_7
                             85 	.globl _P0_6
                             86 	.globl _P0_5
                             87 	.globl _P0_4
                             88 	.globl _P0_3
                             89 	.globl _P0_2
                             90 	.globl _P0_1
                             91 	.globl _P0_0
                             92 	.globl _B
                             93 	.globl _ACC
                             94 	.globl _PSW
                             95 	.globl _IP
                             96 	.globl _P3
                             97 	.globl _IE
                             98 	.globl _P2
                             99 	.globl _SBUF
                            100 	.globl _SCON
                            101 	.globl _P1
                            102 	.globl _TH1
                            103 	.globl _TH0
                            104 	.globl _TL1
                            105 	.globl _TL0
                            106 	.globl _TMOD
                            107 	.globl _TCON
                            108 	.globl _PCON
                            109 	.globl _DPH
                            110 	.globl _DPL
                            111 	.globl _SP
                            112 	.globl _P0
                            113 	.globl _licznikk
                            114 	.globl _Licznik2
                            115 	.globl _Liczba
                            116 	.globl _count
                            117 	.globl _Bufor
                            118 	.globl _Licznik
                            119 ;--------------------------------------------------------
                            120 ; special function registers
                            121 ;--------------------------------------------------------
                            122 	.area RSEG    (ABS,DATA)
   0000                     123 	.org 0x0000
                    0080    124 _P0	=	0x0080
                    0081    125 _SP	=	0x0081
                    0082    126 _DPL	=	0x0082
                    0083    127 _DPH	=	0x0083
                    0087    128 _PCON	=	0x0087
                    0088    129 _TCON	=	0x0088
                    0089    130 _TMOD	=	0x0089
                    008A    131 _TL0	=	0x008a
                    008B    132 _TL1	=	0x008b
                    008C    133 _TH0	=	0x008c
                    008D    134 _TH1	=	0x008d
                    0090    135 _P1	=	0x0090
                    0098    136 _SCON	=	0x0098
                    0099    137 _SBUF	=	0x0099
                    00A0    138 _P2	=	0x00a0
                    00A8    139 _IE	=	0x00a8
                    00B0    140 _P3	=	0x00b0
                    00B8    141 _IP	=	0x00b8
                    00D0    142 _PSW	=	0x00d0
                    00E0    143 _ACC	=	0x00e0
                    00F0    144 _B	=	0x00f0
                            145 ;--------------------------------------------------------
                            146 ; special function bits
                            147 ;--------------------------------------------------------
                            148 	.area RSEG    (ABS,DATA)
   0000                     149 	.org 0x0000
                    0080    150 _P0_0	=	0x0080
                    0081    151 _P0_1	=	0x0081
                    0082    152 _P0_2	=	0x0082
                    0083    153 _P0_3	=	0x0083
                    0084    154 _P0_4	=	0x0084
                    0085    155 _P0_5	=	0x0085
                    0086    156 _P0_6	=	0x0086
                    0087    157 _P0_7	=	0x0087
                    0088    158 _IT0	=	0x0088
                    0089    159 _IE0	=	0x0089
                    008A    160 _IT1	=	0x008a
                    008B    161 _IE1	=	0x008b
                    008C    162 _TR0	=	0x008c
                    008D    163 _TF0	=	0x008d
                    008E    164 _TR1	=	0x008e
                    008F    165 _TF1	=	0x008f
                    0090    166 _P1_0	=	0x0090
                    0091    167 _P1_1	=	0x0091
                    0092    168 _P1_2	=	0x0092
                    0093    169 _P1_3	=	0x0093
                    0094    170 _P1_4	=	0x0094
                    0095    171 _P1_5	=	0x0095
                    0096    172 _P1_6	=	0x0096
                    0097    173 _P1_7	=	0x0097
                    0098    174 _RI	=	0x0098
                    0099    175 _TI	=	0x0099
                    009A    176 _RB8	=	0x009a
                    009B    177 _TB8	=	0x009b
                    009C    178 _REN	=	0x009c
                    009D    179 _SM2	=	0x009d
                    009E    180 _SM1	=	0x009e
                    009F    181 _SM0	=	0x009f
                    00A0    182 _P2_0	=	0x00a0
                    00A1    183 _P2_1	=	0x00a1
                    00A2    184 _P2_2	=	0x00a2
                    00A3    185 _P2_3	=	0x00a3
                    00A4    186 _P2_4	=	0x00a4
                    00A5    187 _P2_5	=	0x00a5
                    00A6    188 _P2_6	=	0x00a6
                    00A7    189 _P2_7	=	0x00a7
                    00A8    190 _EX0	=	0x00a8
                    00A9    191 _ET0	=	0x00a9
                    00AA    192 _EX1	=	0x00aa
                    00AB    193 _ET1	=	0x00ab
                    00AC    194 _ES	=	0x00ac
                    00AF    195 _EA	=	0x00af
                    00B0    196 _P3_0	=	0x00b0
                    00B1    197 _P3_1	=	0x00b1
                    00B2    198 _P3_2	=	0x00b2
                    00B3    199 _P3_3	=	0x00b3
                    00B4    200 _P3_4	=	0x00b4
                    00B5    201 _P3_5	=	0x00b5
                    00B6    202 _P3_6	=	0x00b6
                    00B7    203 _P3_7	=	0x00b7
                    00B0    204 _RXD	=	0x00b0
                    00B1    205 _TXD	=	0x00b1
                    00B2    206 _INT0	=	0x00b2
                    00B3    207 _INT1	=	0x00b3
                    00B4    208 _T0	=	0x00b4
                    00B5    209 _T1	=	0x00b5
                    00B6    210 _WR	=	0x00b6
                    00B7    211 _RD	=	0x00b7
                    00B8    212 _PX0	=	0x00b8
                    00B9    213 _PT0	=	0x00b9
                    00BA    214 _PX1	=	0x00ba
                    00BB    215 _PT1	=	0x00bb
                    00BC    216 _PS	=	0x00bc
                    00D0    217 _P	=	0x00d0
                    00D1    218 _F1	=	0x00d1
                    00D2    219 _OV	=	0x00d2
                    00D3    220 _RS0	=	0x00d3
                    00D4    221 _RS1	=	0x00d4
                    00D5    222 _F0	=	0x00d5
                    00D6    223 _AC	=	0x00d6
                    00D7    224 _CY	=	0x00d7
                            225 ;--------------------------------------------------------
                            226 ; overlayable register banks
                            227 ;--------------------------------------------------------
                            228 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     229 	.ds 8
                            230 	.area REG_BANK_1	(REL,OVR,DATA)
   0008                     231 	.ds 8
                            232 ;--------------------------------------------------------
                            233 ; overlayable bit register bank
                            234 ;--------------------------------------------------------
                            235 	.area BIT_BANK	(REL,OVR,DATA)
   0020                     236 bits:
   0020                     237 	.ds 1
                    8000    238 	b0 = bits[0]
                    8100    239 	b1 = bits[1]
                    8200    240 	b2 = bits[2]
                    8300    241 	b3 = bits[3]
                    8400    242 	b4 = bits[4]
                    8500    243 	b5 = bits[5]
                    8600    244 	b6 = bits[6]
                    8700    245 	b7 = bits[7]
                            246 ;--------------------------------------------------------
                            247 ; internal ram data
                            248 ;--------------------------------------------------------
                            249 	.area DSEG    (DATA)
   0010                     250 _Licznik::
   0010                     251 	.ds 1
   0011                     252 _Bufor::
   0011                     253 	.ds 4
   0015                     254 _count::
   0015                     255 	.ds 2
   0017                     256 _Liczba::
   0017                     257 	.ds 2
   0019                     258 _Licznik2::
   0019                     259 	.ds 2
   001B                     260 _licznikk::
   001B                     261 	.ds 2
                            262 ;--------------------------------------------------------
                            263 ; overlayable items in internal ram 
                            264 ;--------------------------------------------------------
                            265 	.area OSEG    (OVR,DATA)
                            266 ;--------------------------------------------------------
                            267 ; Stack segment in internal ram 
                            268 ;--------------------------------------------------------
                            269 	.area	SSEG	(DATA)
   0021                     270 __start__stack:
   0021                     271 	.ds	1
                            272 
                            273 ;--------------------------------------------------------
                            274 ; indirectly addressable internal ram data
                            275 ;--------------------------------------------------------
                            276 	.area ISEG    (DATA)
                            277 ;--------------------------------------------------------
                            278 ; absolute internal ram data
                            279 ;--------------------------------------------------------
                            280 	.area IABS    (ABS,DATA)
                            281 	.area IABS    (ABS,DATA)
                            282 ;--------------------------------------------------------
                            283 ; bit data
                            284 ;--------------------------------------------------------
                            285 	.area BSEG    (BIT)
                            286 ;--------------------------------------------------------
                            287 ; paged external ram data
                            288 ;--------------------------------------------------------
                            289 	.area PSEG    (PAG,XDATA)
                            290 ;--------------------------------------------------------
                            291 ; external ram data
                            292 ;--------------------------------------------------------
                            293 	.area XSEG    (XDATA)
                            294 ;--------------------------------------------------------
                            295 ; absolute external ram data
                            296 ;--------------------------------------------------------
                            297 	.area XABS    (ABS,XDATA)
                            298 ;--------------------------------------------------------
                            299 ; external initialized ram data
                            300 ;--------------------------------------------------------
                            301 	.area XISEG   (XDATA)
                            302 	.area HOME    (CODE)
                            303 	.area GSINIT0 (CODE)
                            304 	.area GSINIT1 (CODE)
                            305 	.area GSINIT2 (CODE)
                            306 	.area GSINIT3 (CODE)
                            307 	.area GSINIT4 (CODE)
                            308 	.area GSINIT5 (CODE)
                            309 	.area GSINIT  (CODE)
                            310 	.area GSFINAL (CODE)
                            311 	.area CSEG    (CODE)
                            312 ;--------------------------------------------------------
                            313 ; interrupt vector 
                            314 ;--------------------------------------------------------
                            315 	.area HOME    (CODE)
   0000                     316 __interrupt_vect:
   0000 02 00 23            317 	ljmp	__sdcc_gsinit_startup
   0003 32                  318 	reti
   0004                     319 	.ds	7
   000B 02 00 BD            320 	ljmp	_timer0
   000E                     321 	.ds	5
   0013 32                  322 	reti
   0014                     323 	.ds	7
   001B 02 01 ED            324 	ljmp	_timer1
                            325 ;--------------------------------------------------------
                            326 ; global & static initialisations
                            327 ;--------------------------------------------------------
                            328 	.area HOME    (CODE)
                            329 	.area GSINIT  (CODE)
                            330 	.area GSFINAL (CODE)
                            331 	.area GSINIT  (CODE)
                            332 	.globl __sdcc_gsinit_startup
                            333 	.globl __sdcc_program_startup
                            334 	.globl __start__stack
                            335 	.globl __mcs51_genXINIT
                            336 	.globl __mcs51_genXRAMCLEAR
                            337 	.globl __mcs51_genRAMCLEAR
                            338 ;	Z:\Pulpit\SW\lab10\10v3.c:13: unsigned char Licznik =0;
   007C 75 10 00            339 	mov	_Licznik,#0x00
                            340 ;	Z:\Pulpit\SW\lab10\10v3.c:15: unsigned int count =0;
   007F E4                  341 	clr	a
   0080 F5 15               342 	mov	_count,a
   0082 F5 16               343 	mov	(_count + 1),a
                            344 ;	Z:\Pulpit\SW\lab10\10v3.c:16: unsigned int Liczba=0;
   0084 E4                  345 	clr	a
   0085 F5 17               346 	mov	_Liczba,a
   0087 F5 18               347 	mov	(_Liczba + 1),a
                            348 ;	Z:\Pulpit\SW\lab10\10v3.c:17: unsigned int Licznik2=0;
   0089 E4                  349 	clr	a
   008A F5 19               350 	mov	_Licznik2,a
   008C F5 1A               351 	mov	(_Licznik2 + 1),a
                            352 ;	Z:\Pulpit\SW\lab10\10v3.c:18: unsigned int licznikk=0;
   008E E4                  353 	clr	a
   008F F5 1B               354 	mov	_licznikk,a
   0091 F5 1C               355 	mov	(_licznikk + 1),a
                            356 	.area GSFINAL (CODE)
   0093 02 00 1E            357 	ljmp	__sdcc_program_startup
                            358 ;--------------------------------------------------------
                            359 ; Home
                            360 ;--------------------------------------------------------
                            361 	.area HOME    (CODE)
                            362 	.area HOME    (CODE)
   001E                     363 __sdcc_program_startup:
   001E 12 00 96            364 	lcall	_main
                            365 ;	return from main will lock up
   0021 80 FE               366 	sjmp .
                            367 ;--------------------------------------------------------
                            368 ; code
                            369 ;--------------------------------------------------------
                            370 	.area CSEG    (CODE)
                            371 ;------------------------------------------------------------
                            372 ;Allocation info for local variables in function 'main'
                            373 ;------------------------------------------------------------
                            374 ;------------------------------------------------------------
                            375 ;	Z:\Pulpit\SW\lab10\10v3.c:19: int main(){
                            376 ;	-----------------------------------------
                            377 ;	 function main
                            378 ;	-----------------------------------------
   0096                     379 _main:
                    0002    380 	ar2 = 0x02
                    0003    381 	ar3 = 0x03
                    0004    382 	ar4 = 0x04
                    0005    383 	ar5 = 0x05
                    0006    384 	ar6 = 0x06
                    0007    385 	ar7 = 0x07
                    0000    386 	ar0 = 0x00
                    0001    387 	ar1 = 0x01
                            388 ;	Z:\Pulpit\SW\lab10\10v3.c:21: TMOD=1;
   0096 75 89 01            389 	mov	_TMOD,#0x01
                            390 ;	Z:\Pulpit\SW\lab10\10v3.c:22: TH0=czas/256;
   0099 75 8C FD            391 	mov	_TH0,#0xFD
                            392 ;	Z:\Pulpit\SW\lab10\10v3.c:23: TL0=czas%256;
   009C 75 8A 18            393 	mov	_TL0,#0x18
                            394 ;	Z:\Pulpit\SW\lab10\10v3.c:24: TR0=1;
   009F D2 8C               395 	setb	_TR0
                            396 ;	Z:\Pulpit\SW\lab10\10v3.c:25: ET0=1;
   00A1 D2 A9               397 	setb	_ET0
                            398 ;	Z:\Pulpit\SW\lab10\10v3.c:28: TH1=czas2/256;
   00A3 75 8D 00            399 	mov	_TH1,#0x00
                            400 ;	Z:\Pulpit\SW\lab10\10v3.c:29: TL1=czas2%256;
   00A6 75 8B 4C            401 	mov	_TL1,#0x4C
                            402 ;	Z:\Pulpit\SW\lab10\10v3.c:30: TR1=1;
   00A9 D2 8E               403 	setb	_TR1
                            404 ;	Z:\Pulpit\SW\lab10\10v3.c:31: ET1=1;
   00AB D2 AB               405 	setb	_ET1
                            406 ;	Z:\Pulpit\SW\lab10\10v3.c:35: EA=1;
   00AD D2 AF               407 	setb	_EA
                            408 ;	Z:\Pulpit\SW\lab10\10v3.c:37: Bufor[0]=0;
   00AF 75 11 00            409 	mov	_Bufor,#0x00
                            410 ;	Z:\Pulpit\SW\lab10\10v3.c:38: Bufor[1]=0;
   00B2 75 12 00            411 	mov	(_Bufor + 0x0001),#0x00
                            412 ;	Z:\Pulpit\SW\lab10\10v3.c:39: Bufor[2]=0;
   00B5 75 13 00            413 	mov	(_Bufor + 0x0002),#0x00
                            414 ;	Z:\Pulpit\SW\lab10\10v3.c:40: Bufor[3]=0;
   00B8 75 14 00            415 	mov	(_Bufor + 0x0003),#0x00
                            416 ;	Z:\Pulpit\SW\lab10\10v3.c:43: while(1);
   00BB                     417 00102$:
   00BB 80 FE               418 	sjmp	00102$
                            419 ;------------------------------------------------------------
                            420 ;Allocation info for local variables in function 'timer0'
                            421 ;------------------------------------------------------------
                            422 ;------------------------------------------------------------
                            423 ;	Z:\Pulpit\SW\lab10\10v3.c:46: void timer0(void)__interrupt(1)__using(1)
                            424 ;	-----------------------------------------
                            425 ;	 function timer0
                            426 ;	-----------------------------------------
   00BD                     427 _timer0:
                    000A    428 	ar2 = 0x0a
                    000B    429 	ar3 = 0x0b
                    000C    430 	ar4 = 0x0c
                    000D    431 	ar5 = 0x0d
                    000E    432 	ar6 = 0x0e
                    000F    433 	ar7 = 0x0f
                    0008    434 	ar0 = 0x08
                    0009    435 	ar1 = 0x09
   00BD C0 20               436 	push	bits
   00BF C0 E0               437 	push	acc
   00C1 C0 F0               438 	push	b
   00C3 C0 82               439 	push	dpl
   00C5 C0 83               440 	push	dph
   00C7 C0 02               441 	push	(0+2)
   00C9 C0 03               442 	push	(0+3)
   00CB C0 04               443 	push	(0+4)
   00CD C0 05               444 	push	(0+5)
   00CF C0 06               445 	push	(0+6)
   00D1 C0 07               446 	push	(0+7)
   00D3 C0 00               447 	push	(0+0)
   00D5 C0 01               448 	push	(0+1)
   00D7 C0 D0               449 	push	psw
   00D9 75 D0 08            450 	mov	psw,#0x08
                            451 ;	Z:\Pulpit\SW\lab10\10v3.c:48: TH0=czas/256;
   00DC 75 8C FD            452 	mov	_TH0,#0xFD
                            453 ;	Z:\Pulpit\SW\lab10\10v3.c:49: TL0=czas%256;
   00DF 75 8A 18            454 	mov	_TL0,#0x18
                            455 ;	Z:\Pulpit\SW\lab10\10v3.c:51: if(++count>5)
   00E2 05 15               456 	inc	_count
   00E4 E4                  457 	clr	a
   00E5 B5 15 02            458 	cjne	a,_count,00109$
   00E8 05 16               459 	inc	(_count + 1)
   00EA                     460 00109$:
   00EA C3                  461 	clr	c
   00EB 74 05               462 	mov	a,#0x05
   00ED 95 15               463 	subb	a,_count
   00EF E4                  464 	clr	a
   00F0 95 16               465 	subb	a,(_count + 1)
   00F2 40 03               466 	jc	00110$
   00F4 02 01 D0            467 	ljmp	00105$
   00F7                     468 00110$:
                            469 ;	Z:\Pulpit\SW\lab10\10v3.c:53: portAnod= tablicaAnod[Licznik];
   00F7 E5 10               470 	mov	a,_Licznik
   00F9 90 02 DD            471 	mov	dptr,#_tablicaAnod
   00FC 93                  472 	movc	a,@a+dptr
   00FD F5 80               473 	mov	_P0,a
                            474 ;	Z:\Pulpit\SW\lab10\10v3.c:54: portSek=TablicaZnakow[Bufor[Licznik]];
   00FF E5 10               475 	mov	a,_Licznik
   0101 24 11               476 	add	a,#_Bufor
   0103 F8                  477 	mov	r0,a
   0104 E6                  478 	mov	a,@r0
   0105 90 02 E1            479 	mov	dptr,#_TablicaZnakow
   0108 93                  480 	movc	a,@a+dptr
   0109 F5 A0               481 	mov	_P2,a
                            482 ;	Z:\Pulpit\SW\lab10\10v3.c:55: Licznik++;
   010B 05 10               483 	inc	_Licznik
                            484 ;	Z:\Pulpit\SW\lab10\10v3.c:57: Bufor[3]=(Liczba%10);
   010D 74 0A               485 	mov	a,#0x0A
   010F C0 E0               486 	push	acc
   0111 E4                  487 	clr	a
   0112 C0 E0               488 	push	acc
   0114 85 17 82            489 	mov	dpl,_Liczba
   0117 85 18 83            490 	mov	dph,(_Liczba + 1)
   011A 75 D0 00            491 	mov	psw,#0x00
   011D 12 02 94            492 	lcall	__moduint
   0120 75 D0 08            493 	mov	psw,#0x08
   0123 AA 82               494 	mov	r2,dpl
   0125 15 81               495 	dec	sp
   0127 15 81               496 	dec	sp
   0129 8A 14               497 	mov	(_Bufor + 0x0003),r2
                            498 ;	Z:\Pulpit\SW\lab10\10v3.c:58: Bufor[2]=(Liczba%100)/10;
   012B 74 64               499 	mov	a,#0x64
   012D C0 E0               500 	push	acc
   012F E4                  501 	clr	a
   0130 C0 E0               502 	push	acc
   0132 85 17 82            503 	mov	dpl,_Liczba
   0135 85 18 83            504 	mov	dph,(_Liczba + 1)
   0138 75 D0 00            505 	mov	psw,#0x00
   013B 12 02 94            506 	lcall	__moduint
   013E 75 D0 08            507 	mov	psw,#0x08
   0141 AA 82               508 	mov	r2,dpl
   0143 AB 83               509 	mov	r3,dph
   0145 15 81               510 	dec	sp
   0147 15 81               511 	dec	sp
   0149 74 0A               512 	mov	a,#0x0A
   014B C0 E0               513 	push	acc
   014D E4                  514 	clr	a
   014E C0 E0               515 	push	acc
   0150 8A 82               516 	mov	dpl,r2
   0152 8B 83               517 	mov	dph,r3
   0154 75 D0 00            518 	mov	psw,#0x00
   0157 12 02 63            519 	lcall	__divuint
   015A 75 D0 08            520 	mov	psw,#0x08
   015D AA 82               521 	mov	r2,dpl
   015F 15 81               522 	dec	sp
   0161 15 81               523 	dec	sp
   0163 8A 13               524 	mov	(_Bufor + 0x0002),r2
                            525 ;	Z:\Pulpit\SW\lab10\10v3.c:59: Bufor[1]=(Liczba%1000)/100;
   0165 74 E8               526 	mov	a,#0xE8
   0167 C0 E0               527 	push	acc
   0169 74 03               528 	mov	a,#0x03
   016B C0 E0               529 	push	acc
   016D 85 17 82            530 	mov	dpl,_Liczba
   0170 85 18 83            531 	mov	dph,(_Liczba + 1)
   0173 75 D0 00            532 	mov	psw,#0x00
   0176 12 02 94            533 	lcall	__moduint
   0179 75 D0 08            534 	mov	psw,#0x08
   017C AA 82               535 	mov	r2,dpl
   017E AB 83               536 	mov	r3,dph
   0180 15 81               537 	dec	sp
   0182 15 81               538 	dec	sp
   0184 74 64               539 	mov	a,#0x64
   0186 C0 E0               540 	push	acc
   0188 E4                  541 	clr	a
   0189 C0 E0               542 	push	acc
   018B 8A 82               543 	mov	dpl,r2
   018D 8B 83               544 	mov	dph,r3
   018F 75 D0 00            545 	mov	psw,#0x00
   0192 12 02 63            546 	lcall	__divuint
   0195 75 D0 08            547 	mov	psw,#0x08
   0198 AA 82               548 	mov	r2,dpl
   019A 15 81               549 	dec	sp
   019C 15 81               550 	dec	sp
   019E 8A 12               551 	mov	(_Bufor + 0x0001),r2
                            552 ;	Z:\Pulpit\SW\lab10\10v3.c:60: Bufor[0]=Liczba/1000;
   01A0 74 E8               553 	mov	a,#0xE8
   01A2 C0 E0               554 	push	acc
   01A4 74 03               555 	mov	a,#0x03
   01A6 C0 E0               556 	push	acc
   01A8 85 17 82            557 	mov	dpl,_Liczba
   01AB 85 18 83            558 	mov	dph,(_Liczba + 1)
   01AE 75 D0 00            559 	mov	psw,#0x00
   01B1 12 02 63            560 	lcall	__divuint
   01B4 75 D0 08            561 	mov	psw,#0x08
   01B7 AA 82               562 	mov	r2,dpl
   01B9 AB 83               563 	mov	r3,dph
   01BB 15 81               564 	dec	sp
   01BD 15 81               565 	dec	sp
   01BF 8A 11               566 	mov	_Bufor,r2
                            567 ;	Z:\Pulpit\SW\lab10\10v3.c:62: if(Licznik >3)Licznik=0;
   01C1 74 03               568 	mov	a,#0x03
   01C3 B5 10 00            569 	cjne	a,_Licznik,00111$
   01C6                     570 00111$:
   01C6 50 03               571 	jnc	00102$
   01C8 75 10 00            572 	mov	_Licznik,#0x00
   01CB                     573 00102$:
                            574 ;	Z:\Pulpit\SW\lab10\10v3.c:63: count=0;
   01CB E4                  575 	clr	a
   01CC F5 15               576 	mov	_count,a
   01CE F5 16               577 	mov	(_count + 1),a
   01D0                     578 00105$:
   01D0 D0 D0               579 	pop	psw
   01D2 D0 01               580 	pop	(0+1)
   01D4 D0 00               581 	pop	(0+0)
   01D6 D0 07               582 	pop	(0+7)
   01D8 D0 06               583 	pop	(0+6)
   01DA D0 05               584 	pop	(0+5)
   01DC D0 04               585 	pop	(0+4)
   01DE D0 03               586 	pop	(0+3)
   01E0 D0 02               587 	pop	(0+2)
   01E2 D0 83               588 	pop	dph
   01E4 D0 82               589 	pop	dpl
   01E6 D0 F0               590 	pop	b
   01E8 D0 E0               591 	pop	acc
   01EA D0 20               592 	pop	bits
   01EC 32                  593 	reti
                            594 ;------------------------------------------------------------
                            595 ;Allocation info for local variables in function 'timer1'
                            596 ;------------------------------------------------------------
                            597 ;------------------------------------------------------------
                            598 ;	Z:\Pulpit\SW\lab10\10v3.c:68: void timer1(void)__interrupt(3)__using(1)
                            599 ;	-----------------------------------------
                            600 ;	 function timer1
                            601 ;	-----------------------------------------
   01ED                     602 _timer1:
   01ED C0 20               603 	push	bits
   01EF C0 E0               604 	push	acc
   01F1 C0 F0               605 	push	b
   01F3 C0 82               606 	push	dpl
   01F5 C0 83               607 	push	dph
   01F7 C0 02               608 	push	(0+2)
   01F9 C0 03               609 	push	(0+3)
   01FB C0 04               610 	push	(0+4)
   01FD C0 05               611 	push	(0+5)
   01FF C0 06               612 	push	(0+6)
   0201 C0 07               613 	push	(0+7)
   0203 C0 00               614 	push	(0+0)
   0205 C0 01               615 	push	(0+1)
   0207 C0 D0               616 	push	psw
   0209 75 D0 08            617 	mov	psw,#0x08
                            618 ;	Z:\Pulpit\SW\lab10\10v3.c:70: TH1=czas2/256;
   020C 75 8D 00            619 	mov	_TH1,#0x00
                            620 ;	Z:\Pulpit\SW\lab10\10v3.c:71: TL1=czas2%256;
   020F 75 8B 4C            621 	mov	_TL1,#0x4C
                            622 ;	Z:\Pulpit\SW\lab10\10v3.c:72: if((++Licznik2)%10==1)
   0212 05 19               623 	inc	_Licznik2
   0214 E4                  624 	clr	a
   0215 B5 19 02            625 	cjne	a,_Licznik2,00106$
   0218 05 1A               626 	inc	(_Licznik2 + 1)
   021A                     627 00106$:
   021A 74 0A               628 	mov	a,#0x0A
   021C C0 E0               629 	push	acc
   021E E4                  630 	clr	a
   021F C0 E0               631 	push	acc
   0221 85 19 82            632 	mov	dpl,_Licznik2
   0224 85 1A 83            633 	mov	dph,(_Licznik2 + 1)
   0227 75 D0 00            634 	mov	psw,#0x00
   022A 12 02 94            635 	lcall	__moduint
   022D 75 D0 08            636 	mov	psw,#0x08
   0230 AA 82               637 	mov	r2,dpl
   0232 AB 83               638 	mov	r3,dph
   0234 15 81               639 	dec	sp
   0236 15 81               640 	dec	sp
   0238 BA 01 0B            641 	cjne	r2,#0x01,00103$
   023B BB 00 08            642 	cjne	r3,#0x00,00103$
                            643 ;	Z:\Pulpit\SW\lab10\10v3.c:74: Liczba++;
   023E 05 17               644 	inc	_Liczba
   0240 E4                  645 	clr	a
   0241 B5 17 02            646 	cjne	a,_Liczba,00109$
   0244 05 18               647 	inc	(_Liczba + 1)
   0246                     648 00109$:
   0246                     649 00103$:
   0246 D0 D0               650 	pop	psw
   0248 D0 01               651 	pop	(0+1)
   024A D0 00               652 	pop	(0+0)
   024C D0 07               653 	pop	(0+7)
   024E D0 06               654 	pop	(0+6)
   0250 D0 05               655 	pop	(0+5)
   0252 D0 04               656 	pop	(0+4)
   0254 D0 03               657 	pop	(0+3)
   0256 D0 02               658 	pop	(0+2)
   0258 D0 83               659 	pop	dph
   025A D0 82               660 	pop	dpl
   025C D0 F0               661 	pop	b
   025E D0 E0               662 	pop	acc
   0260 D0 20               663 	pop	bits
   0262 32                  664 	reti
                            665 	.area CSEG    (CODE)
                            666 	.area CONST   (CODE)
   02DD                     667 _tablicaAnod:
   02DD 0E                  668 	.db #0x0E	; 14
   02DE 0D                  669 	.db #0x0D	; 13
   02DF 0B                  670 	.db #0x0B	; 11
   02E0 07                  671 	.db #0x07	; 7
   02E1                     672 _TablicaZnakow:
   02E1 03                  673 	.db #0x03	; 3
   02E2 9F                  674 	.db #0x9F	; 159
   02E3 25                  675 	.db #0x25	; 37
   02E4 0D                  676 	.db #0x0D	; 13
   02E5 99                  677 	.db #0x99	; 153
   02E6 49                  678 	.db #0x49	; 73	I
   02E7 41                  679 	.db #0x41	; 65	A
   02E8 1F                  680 	.db #0x1F	; 31
   02E9 01                  681 	.db #0x01	; 1
   02EA 09                  682 	.db #0x09	; 9
   02EB FF                  683 	.db #0xFF	; 255
                            684 	.area XINIT   (CODE)
                            685 	.area CABS    (ABS,CODE)
