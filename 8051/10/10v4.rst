                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon May 09 17:34:04 2016
                              5 ;--------------------------------------------------------
                              6 	.module 10v4
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TablicaZnakow
                             13 	.globl _tablicaAnod
                             14 	.globl _buttonR
                             15 	.globl _buttonL
                             16 	.globl _timer0
                             17 	.globl _main
                             18 	.globl _CY
                             19 	.globl _AC
                             20 	.globl _F0
                             21 	.globl _RS1
                             22 	.globl _RS0
                             23 	.globl _OV
                             24 	.globl _F1
                             25 	.globl _P
                             26 	.globl _PS
                             27 	.globl _PT1
                             28 	.globl _PX1
                             29 	.globl _PT0
                             30 	.globl _PX0
                             31 	.globl _RD
                             32 	.globl _WR
                             33 	.globl _T1
                             34 	.globl _T0
                             35 	.globl _INT1
                             36 	.globl _INT0
                             37 	.globl _TXD
                             38 	.globl _RXD
                             39 	.globl _P3_7
                             40 	.globl _P3_6
                             41 	.globl _P3_5
                             42 	.globl _P3_4
                             43 	.globl _P3_3
                             44 	.globl _P3_2
                             45 	.globl _P3_1
                             46 	.globl _P3_0
                             47 	.globl _EA
                             48 	.globl _ES
                             49 	.globl _ET1
                             50 	.globl _EX1
                             51 	.globl _ET0
                             52 	.globl _EX0
                             53 	.globl _P2_7
                             54 	.globl _P2_6
                             55 	.globl _P2_5
                             56 	.globl _P2_4
                             57 	.globl _P2_3
                             58 	.globl _P2_2
                             59 	.globl _P2_1
                             60 	.globl _P2_0
                             61 	.globl _SM0
                             62 	.globl _SM1
                             63 	.globl _SM2
                             64 	.globl _REN
                             65 	.globl _TB8
                             66 	.globl _RB8
                             67 	.globl _TI
                             68 	.globl _RI
                             69 	.globl _P1_7
                             70 	.globl _P1_6
                             71 	.globl _P1_5
                             72 	.globl _P1_4
                             73 	.globl _P1_3
                             74 	.globl _P1_2
                             75 	.globl _P1_1
                             76 	.globl _P1_0
                             77 	.globl _TF1
                             78 	.globl _TR1
                             79 	.globl _TF0
                             80 	.globl _TR0
                             81 	.globl _IE1
                             82 	.globl _IT1
                             83 	.globl _IE0
                             84 	.globl _IT0
                             85 	.globl _P0_7
                             86 	.globl _P0_6
                             87 	.globl _P0_5
                             88 	.globl _P0_4
                             89 	.globl _P0_3
                             90 	.globl _P0_2
                             91 	.globl _P0_1
                             92 	.globl _P0_0
                             93 	.globl _B
                             94 	.globl _ACC
                             95 	.globl _PSW
                             96 	.globl _IP
                             97 	.globl _P3
                             98 	.globl _IE
                             99 	.globl _P2
                            100 	.globl _SBUF
                            101 	.globl _SCON
                            102 	.globl _P1
                            103 	.globl _TH1
                            104 	.globl _TH0
                            105 	.globl _TL1
                            106 	.globl _TL0
                            107 	.globl _TMOD
                            108 	.globl _TCON
                            109 	.globl _PCON
                            110 	.globl _DPH
                            111 	.globl _DPL
                            112 	.globl _SP
                            113 	.globl _P0
                            114 	.globl _flagaR
                            115 	.globl _flagaL
                            116 	.globl _licznikk
                            117 	.globl _Licznik2
                            118 	.globl _Liczba
                            119 	.globl _count
                            120 	.globl _Bufor
                            121 	.globl _Licznik
                            122 ;--------------------------------------------------------
                            123 ; special function registers
                            124 ;--------------------------------------------------------
                            125 	.area RSEG    (ABS,DATA)
   0000                     126 	.org 0x0000
                    0080    127 _P0	=	0x0080
                    0081    128 _SP	=	0x0081
                    0082    129 _DPL	=	0x0082
                    0083    130 _DPH	=	0x0083
                    0087    131 _PCON	=	0x0087
                    0088    132 _TCON	=	0x0088
                    0089    133 _TMOD	=	0x0089
                    008A    134 _TL0	=	0x008a
                    008B    135 _TL1	=	0x008b
                    008C    136 _TH0	=	0x008c
                    008D    137 _TH1	=	0x008d
                    0090    138 _P1	=	0x0090
                    0098    139 _SCON	=	0x0098
                    0099    140 _SBUF	=	0x0099
                    00A0    141 _P2	=	0x00a0
                    00A8    142 _IE	=	0x00a8
                    00B0    143 _P3	=	0x00b0
                    00B8    144 _IP	=	0x00b8
                    00D0    145 _PSW	=	0x00d0
                    00E0    146 _ACC	=	0x00e0
                    00F0    147 _B	=	0x00f0
                            148 ;--------------------------------------------------------
                            149 ; special function bits
                            150 ;--------------------------------------------------------
                            151 	.area RSEG    (ABS,DATA)
   0000                     152 	.org 0x0000
                    0080    153 _P0_0	=	0x0080
                    0081    154 _P0_1	=	0x0081
                    0082    155 _P0_2	=	0x0082
                    0083    156 _P0_3	=	0x0083
                    0084    157 _P0_4	=	0x0084
                    0085    158 _P0_5	=	0x0085
                    0086    159 _P0_6	=	0x0086
                    0087    160 _P0_7	=	0x0087
                    0088    161 _IT0	=	0x0088
                    0089    162 _IE0	=	0x0089
                    008A    163 _IT1	=	0x008a
                    008B    164 _IE1	=	0x008b
                    008C    165 _TR0	=	0x008c
                    008D    166 _TF0	=	0x008d
                    008E    167 _TR1	=	0x008e
                    008F    168 _TF1	=	0x008f
                    0090    169 _P1_0	=	0x0090
                    0091    170 _P1_1	=	0x0091
                    0092    171 _P1_2	=	0x0092
                    0093    172 _P1_3	=	0x0093
                    0094    173 _P1_4	=	0x0094
                    0095    174 _P1_5	=	0x0095
                    0096    175 _P1_6	=	0x0096
                    0097    176 _P1_7	=	0x0097
                    0098    177 _RI	=	0x0098
                    0099    178 _TI	=	0x0099
                    009A    179 _RB8	=	0x009a
                    009B    180 _TB8	=	0x009b
                    009C    181 _REN	=	0x009c
                    009D    182 _SM2	=	0x009d
                    009E    183 _SM1	=	0x009e
                    009F    184 _SM0	=	0x009f
                    00A0    185 _P2_0	=	0x00a0
                    00A1    186 _P2_1	=	0x00a1
                    00A2    187 _P2_2	=	0x00a2
                    00A3    188 _P2_3	=	0x00a3
                    00A4    189 _P2_4	=	0x00a4
                    00A5    190 _P2_5	=	0x00a5
                    00A6    191 _P2_6	=	0x00a6
                    00A7    192 _P2_7	=	0x00a7
                    00A8    193 _EX0	=	0x00a8
                    00A9    194 _ET0	=	0x00a9
                    00AA    195 _EX1	=	0x00aa
                    00AB    196 _ET1	=	0x00ab
                    00AC    197 _ES	=	0x00ac
                    00AF    198 _EA	=	0x00af
                    00B0    199 _P3_0	=	0x00b0
                    00B1    200 _P3_1	=	0x00b1
                    00B2    201 _P3_2	=	0x00b2
                    00B3    202 _P3_3	=	0x00b3
                    00B4    203 _P3_4	=	0x00b4
                    00B5    204 _P3_5	=	0x00b5
                    00B6    205 _P3_6	=	0x00b6
                    00B7    206 _P3_7	=	0x00b7
                    00B0    207 _RXD	=	0x00b0
                    00B1    208 _TXD	=	0x00b1
                    00B2    209 _INT0	=	0x00b2
                    00B3    210 _INT1	=	0x00b3
                    00B4    211 _T0	=	0x00b4
                    00B5    212 _T1	=	0x00b5
                    00B6    213 _WR	=	0x00b6
                    00B7    214 _RD	=	0x00b7
                    00B8    215 _PX0	=	0x00b8
                    00B9    216 _PT0	=	0x00b9
                    00BA    217 _PX1	=	0x00ba
                    00BB    218 _PT1	=	0x00bb
                    00BC    219 _PS	=	0x00bc
                    00D0    220 _P	=	0x00d0
                    00D1    221 _F1	=	0x00d1
                    00D2    222 _OV	=	0x00d2
                    00D3    223 _RS0	=	0x00d3
                    00D4    224 _RS1	=	0x00d4
                    00D5    225 _F0	=	0x00d5
                    00D6    226 _AC	=	0x00d6
                    00D7    227 _CY	=	0x00d7
                            228 ;--------------------------------------------------------
                            229 ; overlayable register banks
                            230 ;--------------------------------------------------------
                            231 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     232 	.ds 8
                            233 	.area REG_BANK_1	(REL,OVR,DATA)
   0008                     234 	.ds 8
                            235 ;--------------------------------------------------------
                            236 ; overlayable bit register bank
                            237 ;--------------------------------------------------------
                            238 	.area BIT_BANK	(REL,OVR,DATA)
   0020                     239 bits:
   0020                     240 	.ds 1
                    8000    241 	b0 = bits[0]
                    8100    242 	b1 = bits[1]
                    8200    243 	b2 = bits[2]
                    8300    244 	b3 = bits[3]
                    8400    245 	b4 = bits[4]
                    8500    246 	b5 = bits[5]
                    8600    247 	b6 = bits[6]
                    8700    248 	b7 = bits[7]
                            249 ;--------------------------------------------------------
                            250 ; internal ram data
                            251 ;--------------------------------------------------------
                            252 	.area DSEG    (DATA)
   0010                     253 _Licznik::
   0010                     254 	.ds 1
   0011                     255 _Bufor::
   0011                     256 	.ds 4
   0015                     257 _count::
   0015                     258 	.ds 2
   0017                     259 _Liczba::
   0017                     260 	.ds 2
   0019                     261 _Licznik2::
   0019                     262 	.ds 2
   001B                     263 _licznikk::
   001B                     264 	.ds 2
   001D                     265 _flagaL::
   001D                     266 	.ds 1
   001E                     267 _flagaR::
   001E                     268 	.ds 1
                            269 ;--------------------------------------------------------
                            270 ; overlayable items in internal ram 
                            271 ;--------------------------------------------------------
                            272 	.area OSEG    (OVR,DATA)
                            273 ;--------------------------------------------------------
                            274 ; Stack segment in internal ram 
                            275 ;--------------------------------------------------------
                            276 	.area	SSEG	(DATA)
   0021                     277 __start__stack:
   0021                     278 	.ds	1
                            279 
                            280 ;--------------------------------------------------------
                            281 ; indirectly addressable internal ram data
                            282 ;--------------------------------------------------------
                            283 	.area ISEG    (DATA)
                            284 ;--------------------------------------------------------
                            285 ; absolute internal ram data
                            286 ;--------------------------------------------------------
                            287 	.area IABS    (ABS,DATA)
                            288 	.area IABS    (ABS,DATA)
                            289 ;--------------------------------------------------------
                            290 ; bit data
                            291 ;--------------------------------------------------------
                            292 	.area BSEG    (BIT)
                            293 ;--------------------------------------------------------
                            294 ; paged external ram data
                            295 ;--------------------------------------------------------
                            296 	.area PSEG    (PAG,XDATA)
                            297 ;--------------------------------------------------------
                            298 ; external ram data
                            299 ;--------------------------------------------------------
                            300 	.area XSEG    (XDATA)
                            301 ;--------------------------------------------------------
                            302 ; absolute external ram data
                            303 ;--------------------------------------------------------
                            304 	.area XABS    (ABS,XDATA)
                            305 ;--------------------------------------------------------
                            306 ; external initialized ram data
                            307 ;--------------------------------------------------------
                            308 	.area XISEG   (XDATA)
                            309 	.area HOME    (CODE)
                            310 	.area GSINIT0 (CODE)
                            311 	.area GSINIT1 (CODE)
                            312 	.area GSINIT2 (CODE)
                            313 	.area GSINIT3 (CODE)
                            314 	.area GSINIT4 (CODE)
                            315 	.area GSINIT5 (CODE)
                            316 	.area GSINIT  (CODE)
                            317 	.area GSFINAL (CODE)
                            318 	.area CSEG    (CODE)
                            319 ;--------------------------------------------------------
                            320 ; interrupt vector 
                            321 ;--------------------------------------------------------
                            322 	.area HOME    (CODE)
   0000                     323 __interrupt_vect:
   0000 02 00 1B            324 	ljmp	__sdcc_gsinit_startup
   0003 02 02 0C            325 	ljmp	_buttonL
   0006                     326 	.ds	5
   000B 02 00 B7            327 	ljmp	_timer0
   000E                     328 	.ds	5
   0013 02 02 35            329 	ljmp	_buttonR
                            330 ;--------------------------------------------------------
                            331 ; global & static initialisations
                            332 ;--------------------------------------------------------
                            333 	.area HOME    (CODE)
                            334 	.area GSINIT  (CODE)
                            335 	.area GSFINAL (CODE)
                            336 	.area GSINIT  (CODE)
                            337 	.globl __sdcc_gsinit_startup
                            338 	.globl __sdcc_program_startup
                            339 	.globl __start__stack
                            340 	.globl __mcs51_genXINIT
                            341 	.globl __mcs51_genXRAMCLEAR
                            342 	.globl __mcs51_genRAMCLEAR
                            343 ;	Z:\Pulpit\SW\lab10\10v4.c:13: unsigned char Licznik =0;
   0074 75 10 00            344 	mov	_Licznik,#0x00
                            345 ;	Z:\Pulpit\SW\lab10\10v4.c:15: unsigned int count =0;
   0077 E4                  346 	clr	a
   0078 F5 15               347 	mov	_count,a
   007A F5 16               348 	mov	(_count + 1),a
                            349 ;	Z:\Pulpit\SW\lab10\10v4.c:16: unsigned int Liczba=0;
   007C E4                  350 	clr	a
   007D F5 17               351 	mov	_Liczba,a
   007F F5 18               352 	mov	(_Liczba + 1),a
                            353 ;	Z:\Pulpit\SW\lab10\10v4.c:17: unsigned int Licznik2=0;
   0081 E4                  354 	clr	a
   0082 F5 19               355 	mov	_Licznik2,a
   0084 F5 1A               356 	mov	(_Licznik2 + 1),a
                            357 ;	Z:\Pulpit\SW\lab10\10v4.c:19: unsigned int licznikk=0;
   0086 E4                  358 	clr	a
   0087 F5 1B               359 	mov	_licznikk,a
   0089 F5 1C               360 	mov	(_licznikk + 1),a
                            361 ;	Z:\Pulpit\SW\lab10\10v4.c:23: unsigned char flagaL =0;
   008B 75 1D 00            362 	mov	_flagaL,#0x00
                            363 ;	Z:\Pulpit\SW\lab10\10v4.c:24: unsigned char flagaR =0;
   008E 75 1E 00            364 	mov	_flagaR,#0x00
                            365 	.area GSFINAL (CODE)
   0091 02 00 16            366 	ljmp	__sdcc_program_startup
                            367 ;--------------------------------------------------------
                            368 ; Home
                            369 ;--------------------------------------------------------
                            370 	.area HOME    (CODE)
                            371 	.area HOME    (CODE)
   0016                     372 __sdcc_program_startup:
   0016 12 00 94            373 	lcall	_main
                            374 ;	return from main will lock up
   0019 80 FE               375 	sjmp .
                            376 ;--------------------------------------------------------
                            377 ; code
                            378 ;--------------------------------------------------------
                            379 	.area CSEG    (CODE)
                            380 ;------------------------------------------------------------
                            381 ;Allocation info for local variables in function 'main'
                            382 ;------------------------------------------------------------
                            383 ;------------------------------------------------------------
                            384 ;	Z:\Pulpit\SW\lab10\10v4.c:26: int main(){
                            385 ;	-----------------------------------------
                            386 ;	 function main
                            387 ;	-----------------------------------------
   0094                     388 _main:
                    0002    389 	ar2 = 0x02
                    0003    390 	ar3 = 0x03
                    0004    391 	ar4 = 0x04
                    0005    392 	ar5 = 0x05
                    0006    393 	ar6 = 0x06
                    0007    394 	ar7 = 0x07
                    0000    395 	ar0 = 0x00
                    0001    396 	ar1 = 0x01
                            397 ;	Z:\Pulpit\SW\lab10\10v4.c:28: TMOD=1;
   0094 75 89 01            398 	mov	_TMOD,#0x01
                            399 ;	Z:\Pulpit\SW\lab10\10v4.c:29: TH0=czas/256;
   0097 75 8C FD            400 	mov	_TH0,#0xFD
                            401 ;	Z:\Pulpit\SW\lab10\10v4.c:30: TL0=czas%256;
   009A 75 8A 18            402 	mov	_TL0,#0x18
                            403 ;	Z:\Pulpit\SW\lab10\10v4.c:31: TR0=1;
   009D D2 8C               404 	setb	_TR0
                            405 ;	Z:\Pulpit\SW\lab10\10v4.c:32: ET0=1;
   009F D2 A9               406 	setb	_ET0
                            407 ;	Z:\Pulpit\SW\lab10\10v4.c:33: EX1=1;
   00A1 D2 AA               408 	setb	_EX1
                            409 ;	Z:\Pulpit\SW\lab10\10v4.c:34: EX0=1;
   00A3 D2 A8               410 	setb	_EX0
                            411 ;	Z:\Pulpit\SW\lab10\10v4.c:35: PT0=1;
   00A5 D2 B9               412 	setb	_PT0
                            413 ;	Z:\Pulpit\SW\lab10\10v4.c:36: EA=1;
   00A7 D2 AF               414 	setb	_EA
                            415 ;	Z:\Pulpit\SW\lab10\10v4.c:38: Bufor[0]=0;
   00A9 75 11 00            416 	mov	_Bufor,#0x00
                            417 ;	Z:\Pulpit\SW\lab10\10v4.c:39: Bufor[1]=0;
   00AC 75 12 00            418 	mov	(_Bufor + 0x0001),#0x00
                            419 ;	Z:\Pulpit\SW\lab10\10v4.c:40: Bufor[2]=0;
   00AF 75 13 00            420 	mov	(_Bufor + 0x0002),#0x00
                            421 ;	Z:\Pulpit\SW\lab10\10v4.c:41: Bufor[3]=0;
   00B2 75 14 00            422 	mov	(_Bufor + 0x0003),#0x00
                            423 ;	Z:\Pulpit\SW\lab10\10v4.c:44: while(1);
   00B5                     424 00102$:
   00B5 80 FE               425 	sjmp	00102$
                            426 ;------------------------------------------------------------
                            427 ;Allocation info for local variables in function 'timer0'
                            428 ;------------------------------------------------------------
                            429 ;------------------------------------------------------------
                            430 ;	Z:\Pulpit\SW\lab10\10v4.c:47: void timer0(void)__interrupt(1)__using(1)
                            431 ;	-----------------------------------------
                            432 ;	 function timer0
                            433 ;	-----------------------------------------
   00B7                     434 _timer0:
                    000A    435 	ar2 = 0x0a
                    000B    436 	ar3 = 0x0b
                    000C    437 	ar4 = 0x0c
                    000D    438 	ar5 = 0x0d
                    000E    439 	ar6 = 0x0e
                    000F    440 	ar7 = 0x0f
                    0008    441 	ar0 = 0x08
                    0009    442 	ar1 = 0x09
   00B7 C0 20               443 	push	bits
   00B9 C0 E0               444 	push	acc
   00BB C0 F0               445 	push	b
   00BD C0 82               446 	push	dpl
   00BF C0 83               447 	push	dph
   00C1 C0 02               448 	push	(0+2)
   00C3 C0 03               449 	push	(0+3)
   00C5 C0 04               450 	push	(0+4)
   00C7 C0 05               451 	push	(0+5)
   00C9 C0 06               452 	push	(0+6)
   00CB C0 07               453 	push	(0+7)
   00CD C0 00               454 	push	(0+0)
   00CF C0 01               455 	push	(0+1)
   00D1 C0 D0               456 	push	psw
   00D3 75 D0 08            457 	mov	psw,#0x08
                            458 ;	Z:\Pulpit\SW\lab10\10v4.c:49: TH0=czas/256;
   00D6 75 8C FD            459 	mov	_TH0,#0xFD
                            460 ;	Z:\Pulpit\SW\lab10\10v4.c:50: TL0=czas%256;
   00D9 75 8A 18            461 	mov	_TL0,#0x18
                            462 ;	Z:\Pulpit\SW\lab10\10v4.c:52: if(++count>5)
   00DC 05 15               463 	inc	_count
   00DE E4                  464 	clr	a
   00DF B5 15 02            465 	cjne	a,_count,00121$
   00E2 05 16               466 	inc	(_count + 1)
   00E4                     467 00121$:
   00E4 C3                  468 	clr	c
   00E5 74 05               469 	mov	a,#0x05
   00E7 95 15               470 	subb	a,_count
   00E9 E4                  471 	clr	a
   00EA 95 16               472 	subb	a,(_count + 1)
   00EC 40 03               473 	jc	00122$
   00EE 02 01 E9            474 	ljmp	00113$
   00F1                     475 00122$:
                            476 ;	Z:\Pulpit\SW\lab10\10v4.c:54: portAnod= tablicaAnod[Licznik];
   00F1 E5 10               477 	mov	a,_Licznik
   00F3 90 02 DC            478 	mov	dptr,#_tablicaAnod
   00F6 93                  479 	movc	a,@a+dptr
   00F7 F5 80               480 	mov	_P0,a
                            481 ;	Z:\Pulpit\SW\lab10\10v4.c:55: portSek=TablicaZnakow[Bufor[Licznik]];
   00F9 E5 10               482 	mov	a,_Licznik
   00FB 24 11               483 	add	a,#_Bufor
   00FD F8                  484 	mov	r0,a
   00FE E6                  485 	mov	a,@r0
   00FF 90 02 E0            486 	mov	dptr,#_TablicaZnakow
   0102 93                  487 	movc	a,@a+dptr
   0103 F5 A0               488 	mov	_P2,a
                            489 ;	Z:\Pulpit\SW\lab10\10v4.c:56: Licznik++;
   0105 05 10               490 	inc	_Licznik
                            491 ;	Z:\Pulpit\SW\lab10\10v4.c:57: Bufor[3]=(Liczba%10);
   0107 74 0A               492 	mov	a,#0x0A
   0109 C0 E0               493 	push	acc
   010B E4                  494 	clr	a
   010C C0 E0               495 	push	acc
   010E 85 17 82            496 	mov	dpl,_Liczba
   0111 85 18 83            497 	mov	dph,(_Liczba + 1)
   0114 75 D0 00            498 	mov	psw,#0x00
   0117 12 02 93            499 	lcall	__moduint
   011A 75 D0 08            500 	mov	psw,#0x08
   011D AA 82               501 	mov	r2,dpl
   011F 15 81               502 	dec	sp
   0121 15 81               503 	dec	sp
   0123 8A 14               504 	mov	(_Bufor + 0x0003),r2
                            505 ;	Z:\Pulpit\SW\lab10\10v4.c:59: if((Liczba%100)/10 == 0)
   0125 74 64               506 	mov	a,#0x64
   0127 C0 E0               507 	push	acc
   0129 E4                  508 	clr	a
   012A C0 E0               509 	push	acc
   012C 85 17 82            510 	mov	dpl,_Liczba
   012F 85 18 83            511 	mov	dph,(_Liczba + 1)
   0132 75 D0 00            512 	mov	psw,#0x00
   0135 12 02 93            513 	lcall	__moduint
   0138 75 D0 08            514 	mov	psw,#0x08
   013B AA 82               515 	mov	r2,dpl
   013D AB 83               516 	mov	r3,dph
   013F 15 81               517 	dec	sp
   0141 15 81               518 	dec	sp
   0143 74 0A               519 	mov	a,#0x0A
   0145 C0 E0               520 	push	acc
   0147 E4                  521 	clr	a
   0148 C0 E0               522 	push	acc
   014A 8A 82               523 	mov	dpl,r2
   014C 8B 83               524 	mov	dph,r3
   014E 75 D0 00            525 	mov	psw,#0x00
   0151 12 02 62            526 	lcall	__divuint
   0154 75 D0 08            527 	mov	psw,#0x08
   0157 AA 82               528 	mov	r2,dpl
   0159 AB 83               529 	mov	r3,dph
   015B 15 81               530 	dec	sp
   015D 15 81               531 	dec	sp
   015F EA                  532 	mov	a,r2
   0160 4B                  533 	orl	a,r3
   0161 70 05               534 	jnz	00102$
                            535 ;	Z:\Pulpit\SW\lab10\10v4.c:60: Bufor[2]=blank;
   0163 75 13 0A            536 	mov	(_Bufor + 0x0002),#0x0A
   0166 80 02               537 	sjmp	00103$
   0168                     538 00102$:
                            539 ;	Z:\Pulpit\SW\lab10\10v4.c:62: Bufor[2]=(Liczba%100)/10;
   0168 8A 13               540 	mov	(_Bufor + 0x0002),r2
   016A                     541 00103$:
                            542 ;	Z:\Pulpit\SW\lab10\10v4.c:63: if((Liczba%1000)/100 == 0)
   016A 74 E8               543 	mov	a,#0xE8
   016C C0 E0               544 	push	acc
   016E 74 03               545 	mov	a,#0x03
   0170 C0 E0               546 	push	acc
   0172 85 17 82            547 	mov	dpl,_Liczba
   0175 85 18 83            548 	mov	dph,(_Liczba + 1)
   0178 75 D0 00            549 	mov	psw,#0x00
   017B 12 02 93            550 	lcall	__moduint
   017E 75 D0 08            551 	mov	psw,#0x08
   0181 AA 82               552 	mov	r2,dpl
   0183 AB 83               553 	mov	r3,dph
   0185 15 81               554 	dec	sp
   0187 15 81               555 	dec	sp
   0189 74 64               556 	mov	a,#0x64
   018B C0 E0               557 	push	acc
   018D E4                  558 	clr	a
   018E C0 E0               559 	push	acc
   0190 8A 82               560 	mov	dpl,r2
   0192 8B 83               561 	mov	dph,r3
   0194 75 D0 00            562 	mov	psw,#0x00
   0197 12 02 62            563 	lcall	__divuint
   019A 75 D0 08            564 	mov	psw,#0x08
   019D AA 82               565 	mov	r2,dpl
   019F AB 83               566 	mov	r3,dph
   01A1 15 81               567 	dec	sp
   01A3 15 81               568 	dec	sp
   01A5 EA                  569 	mov	a,r2
   01A6 4B                  570 	orl	a,r3
   01A7 70 05               571 	jnz	00105$
                            572 ;	Z:\Pulpit\SW\lab10\10v4.c:64: Bufor[1]=blank;
   01A9 75 12 0A            573 	mov	(_Bufor + 0x0001),#0x0A
   01AC 80 02               574 	sjmp	00106$
   01AE                     575 00105$:
                            576 ;	Z:\Pulpit\SW\lab10\10v4.c:66: Bufor[1]=(Liczba%1000)/100;
   01AE 8A 12               577 	mov	(_Bufor + 0x0001),r2
   01B0                     578 00106$:
                            579 ;	Z:\Pulpit\SW\lab10\10v4.c:67: if(Liczba/1000 == 0)
   01B0 74 E8               580 	mov	a,#0xE8
   01B2 C0 E0               581 	push	acc
   01B4 74 03               582 	mov	a,#0x03
   01B6 C0 E0               583 	push	acc
   01B8 85 17 82            584 	mov	dpl,_Liczba
   01BB 85 18 83            585 	mov	dph,(_Liczba + 1)
   01BE 75 D0 00            586 	mov	psw,#0x00
   01C1 12 02 62            587 	lcall	__divuint
   01C4 75 D0 08            588 	mov	psw,#0x08
   01C7 AA 82               589 	mov	r2,dpl
   01C9 AB 83               590 	mov	r3,dph
   01CB 15 81               591 	dec	sp
   01CD 15 81               592 	dec	sp
   01CF EA                  593 	mov	a,r2
   01D0 4B                  594 	orl	a,r3
   01D1 70 05               595 	jnz	00108$
                            596 ;	Z:\Pulpit\SW\lab10\10v4.c:68: Bufor[0]=blank;
   01D3 75 11 0A            597 	mov	_Bufor,#0x0A
   01D6 80 02               598 	sjmp	00109$
   01D8                     599 00108$:
                            600 ;	Z:\Pulpit\SW\lab10\10v4.c:70: Bufor[0]=Liczba/1000;
   01D8 8A 11               601 	mov	_Bufor,r2
   01DA                     602 00109$:
                            603 ;	Z:\Pulpit\SW\lab10\10v4.c:72: if(Licznik >3)Licznik=0;
   01DA 74 03               604 	mov	a,#0x03
   01DC B5 10 00            605 	cjne	a,_Licznik,00126$
   01DF                     606 00126$:
   01DF 50 03               607 	jnc	00111$
   01E1 75 10 00            608 	mov	_Licznik,#0x00
   01E4                     609 00111$:
                            610 ;	Z:\Pulpit\SW\lab10\10v4.c:73: count=0;
   01E4 E4                  611 	clr	a
   01E5 F5 15               612 	mov	_count,a
   01E7 F5 16               613 	mov	(_count + 1),a
   01E9                     614 00113$:
                            615 ;	Z:\Pulpit\SW\lab10\10v4.c:75: flagaL=1;
   01E9 75 1D 01            616 	mov	_flagaL,#0x01
                            617 ;	Z:\Pulpit\SW\lab10\10v4.c:76: flagaR=1;
   01EC 75 1E 01            618 	mov	_flagaR,#0x01
   01EF D0 D0               619 	pop	psw
   01F1 D0 01               620 	pop	(0+1)
   01F3 D0 00               621 	pop	(0+0)
   01F5 D0 07               622 	pop	(0+7)
   01F7 D0 06               623 	pop	(0+6)
   01F9 D0 05               624 	pop	(0+5)
   01FB D0 04               625 	pop	(0+4)
   01FD D0 03               626 	pop	(0+3)
   01FF D0 02               627 	pop	(0+2)
   0201 D0 83               628 	pop	dph
   0203 D0 82               629 	pop	dpl
   0205 D0 F0               630 	pop	b
   0207 D0 E0               631 	pop	acc
   0209 D0 20               632 	pop	bits
   020B 32                  633 	reti
                            634 ;------------------------------------------------------------
                            635 ;Allocation info for local variables in function 'buttonL'
                            636 ;------------------------------------------------------------
                            637 ;------------------------------------------------------------
                            638 ;	Z:\Pulpit\SW\lab10\10v4.c:79: void buttonL(void)__interrupt(0)__using(1){
                            639 ;	-----------------------------------------
                            640 ;	 function buttonL
                            641 ;	-----------------------------------------
   020C                     642 _buttonL:
   020C C0 E0               643 	push	acc
   020E C0 D0               644 	push	psw
   0210 75 D0 08            645 	mov	psw,#0x08
                            646 ;	Z:\Pulpit\SW\lab10\10v4.c:80: TH0=czas/256;
   0213 75 8C FD            647 	mov	_TH0,#0xFD
                            648 ;	Z:\Pulpit\SW\lab10\10v4.c:81: TL0=czas%256;
   0216 75 8A 18            649 	mov	_TL0,#0x18
                            650 ;	Z:\Pulpit\SW\lab10\10v4.c:82: if (flagaL==1)
   0219 74 01               651 	mov	a,#0x01
   021B B5 1D 12            652 	cjne	a,_flagaL,00105$
                            653 ;	Z:\Pulpit\SW\lab10\10v4.c:84: flagaL=0;
   021E 75 1D 00            654 	mov	_flagaL,#0x00
                            655 ;	Z:\Pulpit\SW\lab10\10v4.c:85: if(Liczba>0)
   0221 E5 17               656 	mov	a,_Liczba
   0223 45 18               657 	orl	a,(_Liczba + 1)
   0225 60 09               658 	jz	00105$
                            659 ;	Z:\Pulpit\SW\lab10\10v4.c:86: Liczba--;
   0227 15 17               660 	dec	_Liczba
   0229 74 FF               661 	mov	a,#0xff
   022B B5 17 02            662 	cjne	a,_Liczba,00112$
   022E 15 18               663 	dec	(_Liczba + 1)
   0230                     664 00112$:
   0230                     665 00105$:
   0230 D0 D0               666 	pop	psw
   0232 D0 E0               667 	pop	acc
   0234 32                  668 	reti
                            669 ;	eliminated unneeded push/pop dpl
                            670 ;	eliminated unneeded push/pop dph
                            671 ;	eliminated unneeded push/pop b
                            672 ;------------------------------------------------------------
                            673 ;Allocation info for local variables in function 'buttonR'
                            674 ;------------------------------------------------------------
                            675 ;------------------------------------------------------------
                            676 ;	Z:\Pulpit\SW\lab10\10v4.c:90: void buttonR(void)__interrupt(2)__using(1){
                            677 ;	-----------------------------------------
                            678 ;	 function buttonR
                            679 ;	-----------------------------------------
   0235                     680 _buttonR:
   0235 C0 E0               681 	push	acc
   0237 C0 D0               682 	push	psw
   0239 75 D0 08            683 	mov	psw,#0x08
                            684 ;	Z:\Pulpit\SW\lab10\10v4.c:91: TH0=czas/256;
   023C 75 8C FD            685 	mov	_TH0,#0xFD
                            686 ;	Z:\Pulpit\SW\lab10\10v4.c:92: TL0=czas%256;
   023F 75 8A 18            687 	mov	_TL0,#0x18
                            688 ;	Z:\Pulpit\SW\lab10\10v4.c:93: if (flagaR==1){
   0242 74 01               689 	mov	a,#0x01
   0244 B5 1E 16            690 	cjne	a,_flagaR,00105$
                            691 ;	Z:\Pulpit\SW\lab10\10v4.c:94: flagaR=0;
   0247 75 1E 00            692 	mov	_flagaR,#0x00
                            693 ;	Z:\Pulpit\SW\lab10\10v4.c:95: if(Liczba<20)
   024A C3                  694 	clr	c
   024B E5 17               695 	mov	a,_Liczba
   024D 94 14               696 	subb	a,#0x14
   024F E5 18               697 	mov	a,(_Liczba + 1)
   0251 94 00               698 	subb	a,#0x00
   0253 50 08               699 	jnc	00105$
                            700 ;	Z:\Pulpit\SW\lab10\10v4.c:96: Liczba++;
   0255 05 17               701 	inc	_Liczba
   0257 E4                  702 	clr	a
   0258 B5 17 02            703 	cjne	a,_Liczba,00112$
   025B 05 18               704 	inc	(_Liczba + 1)
   025D                     705 00112$:
   025D                     706 00105$:
   025D D0 D0               707 	pop	psw
   025F D0 E0               708 	pop	acc
   0261 32                  709 	reti
                            710 ;	eliminated unneeded push/pop dpl
                            711 ;	eliminated unneeded push/pop dph
                            712 ;	eliminated unneeded push/pop b
                            713 	.area CSEG    (CODE)
                            714 	.area CONST   (CODE)
   02DC                     715 _tablicaAnod:
   02DC 0E                  716 	.db #0x0E	; 14
   02DD 0D                  717 	.db #0x0D	; 13
   02DE 0B                  718 	.db #0x0B	; 11
   02DF 07                  719 	.db #0x07	; 7
   02E0                     720 _TablicaZnakow:
   02E0 03                  721 	.db #0x03	; 3
   02E1 9F                  722 	.db #0x9F	; 159
   02E2 25                  723 	.db #0x25	; 37
   02E3 0D                  724 	.db #0x0D	; 13
   02E4 99                  725 	.db #0x99	; 153
   02E5 49                  726 	.db #0x49	; 73	I
   02E6 41                  727 	.db #0x41	; 65	A
   02E7 1F                  728 	.db #0x1F	; 31
   02E8 01                  729 	.db #0x01	; 1
   02E9 09                  730 	.db #0x09	; 9
   02EA FF                  731 	.db #0xFF	; 255
                            732 	.area XINIT   (CODE)
                            733 	.area CABS    (ABS,CODE)
