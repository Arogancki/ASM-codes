                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Mon May 16 13:05:32 2016
                              5 ;--------------------------------------------------------
                              6 	.module 1
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TablicaZnakow
                             13 	.globl _tablicaAnod
                             14 	.globl _buttonR
                             15 	.globl _buttonL
                             16 	.globl _timer0
                             17 	.globl _main
                             18 	.globl _CY
                             19 	.globl _AC
                             20 	.globl _F0
                             21 	.globl _RS1
                             22 	.globl _RS0
                             23 	.globl _OV
                             24 	.globl _F1
                             25 	.globl _P
                             26 	.globl _PS
                             27 	.globl _PT1
                             28 	.globl _PX1
                             29 	.globl _PT0
                             30 	.globl _PX0
                             31 	.globl _RD
                             32 	.globl _WR
                             33 	.globl _T1
                             34 	.globl _T0
                             35 	.globl _INT1
                             36 	.globl _INT0
                             37 	.globl _TXD
                             38 	.globl _RXD
                             39 	.globl _P3_7
                             40 	.globl _P3_6
                             41 	.globl _P3_5
                             42 	.globl _P3_4
                             43 	.globl _P3_3
                             44 	.globl _P3_2
                             45 	.globl _P3_1
                             46 	.globl _P3_0
                             47 	.globl _EA
                             48 	.globl _ES
                             49 	.globl _ET1
                             50 	.globl _EX1
                             51 	.globl _ET0
                             52 	.globl _EX0
                             53 	.globl _P2_7
                             54 	.globl _P2_6
                             55 	.globl _P2_5
                             56 	.globl _P2_4
                             57 	.globl _P2_3
                             58 	.globl _P2_2
                             59 	.globl _P2_1
                             60 	.globl _P2_0
                             61 	.globl _SM0
                             62 	.globl _SM1
                             63 	.globl _SM2
                             64 	.globl _REN
                             65 	.globl _TB8
                             66 	.globl _RB8
                             67 	.globl _TI
                             68 	.globl _RI
                             69 	.globl _P1_7
                             70 	.globl _P1_6
                             71 	.globl _P1_5
                             72 	.globl _P1_4
                             73 	.globl _P1_3
                             74 	.globl _P1_2
                             75 	.globl _P1_1
                             76 	.globl _P1_0
                             77 	.globl _TF1
                             78 	.globl _TR1
                             79 	.globl _TF0
                             80 	.globl _TR0
                             81 	.globl _IE1
                             82 	.globl _IT1
                             83 	.globl _IE0
                             84 	.globl _IT0
                             85 	.globl _P0_7
                             86 	.globl _P0_6
                             87 	.globl _P0_5
                             88 	.globl _P0_4
                             89 	.globl _P0_3
                             90 	.globl _P0_2
                             91 	.globl _P0_1
                             92 	.globl _P0_0
                             93 	.globl _B
                             94 	.globl _ACC
                             95 	.globl _PSW
                             96 	.globl _IP
                             97 	.globl _P3
                             98 	.globl _IE
                             99 	.globl _P2
                            100 	.globl _SBUF
                            101 	.globl _SCON
                            102 	.globl _P1
                            103 	.globl _TH1
                            104 	.globl _TH0
                            105 	.globl _TL1
                            106 	.globl _TL0
                            107 	.globl _TMOD
                            108 	.globl _TCON
                            109 	.globl _PCON
                            110 	.globl _DPH
                            111 	.globl _DPL
                            112 	.globl _SP
                            113 	.globl _P0
                            114 	.globl _flagaR
                            115 	.globl _flagaL
                            116 	.globl _Liczba2
                            117 	.globl _Liczba
                            118 	.globl _count
                            119 	.globl _Bufor
                            120 	.globl _Licznik
                            121 ;--------------------------------------------------------
                            122 ; special function registers
                            123 ;--------------------------------------------------------
                            124 	.area RSEG    (ABS,DATA)
   0000                     125 	.org 0x0000
                    0080    126 _P0	=	0x0080
                    0081    127 _SP	=	0x0081
                    0082    128 _DPL	=	0x0082
                    0083    129 _DPH	=	0x0083
                    0087    130 _PCON	=	0x0087
                    0088    131 _TCON	=	0x0088
                    0089    132 _TMOD	=	0x0089
                    008A    133 _TL0	=	0x008a
                    008B    134 _TL1	=	0x008b
                    008C    135 _TH0	=	0x008c
                    008D    136 _TH1	=	0x008d
                    0090    137 _P1	=	0x0090
                    0098    138 _SCON	=	0x0098
                    0099    139 _SBUF	=	0x0099
                    00A0    140 _P2	=	0x00a0
                    00A8    141 _IE	=	0x00a8
                    00B0    142 _P3	=	0x00b0
                    00B8    143 _IP	=	0x00b8
                    00D0    144 _PSW	=	0x00d0
                    00E0    145 _ACC	=	0x00e0
                    00F0    146 _B	=	0x00f0
                            147 ;--------------------------------------------------------
                            148 ; special function bits
                            149 ;--------------------------------------------------------
                            150 	.area RSEG    (ABS,DATA)
   0000                     151 	.org 0x0000
                    0080    152 _P0_0	=	0x0080
                    0081    153 _P0_1	=	0x0081
                    0082    154 _P0_2	=	0x0082
                    0083    155 _P0_3	=	0x0083
                    0084    156 _P0_4	=	0x0084
                    0085    157 _P0_5	=	0x0085
                    0086    158 _P0_6	=	0x0086
                    0087    159 _P0_7	=	0x0087
                    0088    160 _IT0	=	0x0088
                    0089    161 _IE0	=	0x0089
                    008A    162 _IT1	=	0x008a
                    008B    163 _IE1	=	0x008b
                    008C    164 _TR0	=	0x008c
                    008D    165 _TF0	=	0x008d
                    008E    166 _TR1	=	0x008e
                    008F    167 _TF1	=	0x008f
                    0090    168 _P1_0	=	0x0090
                    0091    169 _P1_1	=	0x0091
                    0092    170 _P1_2	=	0x0092
                    0093    171 _P1_3	=	0x0093
                    0094    172 _P1_4	=	0x0094
                    0095    173 _P1_5	=	0x0095
                    0096    174 _P1_6	=	0x0096
                    0097    175 _P1_7	=	0x0097
                    0098    176 _RI	=	0x0098
                    0099    177 _TI	=	0x0099
                    009A    178 _RB8	=	0x009a
                    009B    179 _TB8	=	0x009b
                    009C    180 _REN	=	0x009c
                    009D    181 _SM2	=	0x009d
                    009E    182 _SM1	=	0x009e
                    009F    183 _SM0	=	0x009f
                    00A0    184 _P2_0	=	0x00a0
                    00A1    185 _P2_1	=	0x00a1
                    00A2    186 _P2_2	=	0x00a2
                    00A3    187 _P2_3	=	0x00a3
                    00A4    188 _P2_4	=	0x00a4
                    00A5    189 _P2_5	=	0x00a5
                    00A6    190 _P2_6	=	0x00a6
                    00A7    191 _P2_7	=	0x00a7
                    00A8    192 _EX0	=	0x00a8
                    00A9    193 _ET0	=	0x00a9
                    00AA    194 _EX1	=	0x00aa
                    00AB    195 _ET1	=	0x00ab
                    00AC    196 _ES	=	0x00ac
                    00AF    197 _EA	=	0x00af
                    00B0    198 _P3_0	=	0x00b0
                    00B1    199 _P3_1	=	0x00b1
                    00B2    200 _P3_2	=	0x00b2
                    00B3    201 _P3_3	=	0x00b3
                    00B4    202 _P3_4	=	0x00b4
                    00B5    203 _P3_5	=	0x00b5
                    00B6    204 _P3_6	=	0x00b6
                    00B7    205 _P3_7	=	0x00b7
                    00B0    206 _RXD	=	0x00b0
                    00B1    207 _TXD	=	0x00b1
                    00B2    208 _INT0	=	0x00b2
                    00B3    209 _INT1	=	0x00b3
                    00B4    210 _T0	=	0x00b4
                    00B5    211 _T1	=	0x00b5
                    00B6    212 _WR	=	0x00b6
                    00B7    213 _RD	=	0x00b7
                    00B8    214 _PX0	=	0x00b8
                    00B9    215 _PT0	=	0x00b9
                    00BA    216 _PX1	=	0x00ba
                    00BB    217 _PT1	=	0x00bb
                    00BC    218 _PS	=	0x00bc
                    00D0    219 _P	=	0x00d0
                    00D1    220 _F1	=	0x00d1
                    00D2    221 _OV	=	0x00d2
                    00D3    222 _RS0	=	0x00d3
                    00D4    223 _RS1	=	0x00d4
                    00D5    224 _F0	=	0x00d5
                    00D6    225 _AC	=	0x00d6
                    00D7    226 _CY	=	0x00d7
                            227 ;--------------------------------------------------------
                            228 ; overlayable register banks
                            229 ;--------------------------------------------------------
                            230 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     231 	.ds 8
                            232 	.area REG_BANK_1	(REL,OVR,DATA)
   0000                     233 	.ds 8
                            234 ;--------------------------------------------------------
                            235 ; internal ram data
                            236 ;--------------------------------------------------------
                            237 	.area DSEG    (DATA)
   0000                     238 _Licznik::
   0000                     239 	.ds 1
   0001                     240 _Bufor::
   0001                     241 	.ds 4
   0005                     242 _count::
   0005                     243 	.ds 2
   0007                     244 _Liczba::
   0007                     245 	.ds 2
   0009                     246 _Liczba2::
   0009                     247 	.ds 2
   000B                     248 _flagaL::
   000B                     249 	.ds 1
   000C                     250 _flagaR::
   000C                     251 	.ds 1
                            252 ;--------------------------------------------------------
                            253 ; overlayable items in internal ram 
                            254 ;--------------------------------------------------------
                            255 	.area OSEG    (OVR,DATA)
                            256 ;--------------------------------------------------------
                            257 ; Stack segment in internal ram 
                            258 ;--------------------------------------------------------
                            259 	.area	SSEG	(DATA)
   0000                     260 __start__stack:
   0000                     261 	.ds	1
                            262 
                            263 ;--------------------------------------------------------
                            264 ; indirectly addressable internal ram data
                            265 ;--------------------------------------------------------
                            266 	.area ISEG    (DATA)
                            267 ;--------------------------------------------------------
                            268 ; absolute internal ram data
                            269 ;--------------------------------------------------------
                            270 	.area IABS    (ABS,DATA)
                            271 	.area IABS    (ABS,DATA)
                            272 ;--------------------------------------------------------
                            273 ; bit data
                            274 ;--------------------------------------------------------
                            275 	.area BSEG    (BIT)
                            276 ;--------------------------------------------------------
                            277 ; paged external ram data
                            278 ;--------------------------------------------------------
                            279 	.area PSEG    (PAG,XDATA)
                            280 ;--------------------------------------------------------
                            281 ; external ram data
                            282 ;--------------------------------------------------------
                            283 	.area XSEG    (XDATA)
                            284 ;--------------------------------------------------------
                            285 ; absolute external ram data
                            286 ;--------------------------------------------------------
                            287 	.area XABS    (ABS,XDATA)
                            288 ;--------------------------------------------------------
                            289 ; external initialized ram data
                            290 ;--------------------------------------------------------
                            291 	.area XISEG   (XDATA)
                            292 	.area HOME    (CODE)
                            293 	.area GSINIT0 (CODE)
                            294 	.area GSINIT1 (CODE)
                            295 	.area GSINIT2 (CODE)
                            296 	.area GSINIT3 (CODE)
                            297 	.area GSINIT4 (CODE)
                            298 	.area GSINIT5 (CODE)
                            299 	.area GSINIT  (CODE)
                            300 	.area GSFINAL (CODE)
                            301 	.area CSEG    (CODE)
                            302 ;--------------------------------------------------------
                            303 ; interrupt vector 
                            304 ;--------------------------------------------------------
                            305 	.area HOME    (CODE)
   0000                     306 __interrupt_vect:
   0000 02s00r00            307 	ljmp	__sdcc_gsinit_startup
   0003 02s00r87            308 	ljmp	_buttonL
   0006                     309 	.ds	5
   000B 02s00r2F            310 	ljmp	_timer0
   000E                     311 	.ds	5
   0013 02s00rB4            312 	ljmp	_buttonR
                            313 ;--------------------------------------------------------
                            314 ; global & static initialisations
                            315 ;--------------------------------------------------------
                            316 	.area HOME    (CODE)
                            317 	.area GSINIT  (CODE)
                            318 	.area GSFINAL (CODE)
                            319 	.area GSINIT  (CODE)
                            320 	.globl __sdcc_gsinit_startup
                            321 	.globl __sdcc_program_startup
                            322 	.globl __start__stack
                            323 	.globl __mcs51_genXINIT
                            324 	.globl __mcs51_genXRAMCLEAR
                            325 	.globl __mcs51_genRAMCLEAR
                            326 ;	Z:\Pulpit\sw\11\1.c:13: unsigned char Licznik =0;
   0000 75*00 00            327 	mov	_Licznik,#0x00
                            328 ;	Z:\Pulpit\sw\11\1.c:15: unsigned int count =0;
   0003 E4                  329 	clr	a
   0004 F5*05               330 	mov	_count,a
   0006 F5*06               331 	mov	(_count + 1),a
                            332 ;	Z:\Pulpit\sw\11\1.c:16: unsigned int Liczba=0;
   0008 E4                  333 	clr	a
   0009 F5*07               334 	mov	_Liczba,a
   000B F5*08               335 	mov	(_Liczba + 1),a
                            336 ;	Z:\Pulpit\sw\11\1.c:17: unsigned int Liczba2=0;
   000D E4                  337 	clr	a
   000E F5*09               338 	mov	_Liczba2,a
   0010 F5*0A               339 	mov	(_Liczba2 + 1),a
                            340 ;	Z:\Pulpit\sw\11\1.c:18: unsigned char flagaL =0;
   0012 75*0B 00            341 	mov	_flagaL,#0x00
                            342 ;	Z:\Pulpit\sw\11\1.c:19: unsigned char flagaR =0;
   0015 75*0C 00            343 	mov	_flagaR,#0x00
                            344 	.area GSFINAL (CODE)
   0000 02s00r16            345 	ljmp	__sdcc_program_startup
                            346 ;--------------------------------------------------------
                            347 ; Home
                            348 ;--------------------------------------------------------
                            349 	.area HOME    (CODE)
                            350 	.area HOME    (CODE)
   0016                     351 __sdcc_program_startup:
   0016 12s00r00            352 	lcall	_main
                            353 ;	return from main will lock up
   0019 80 FE               354 	sjmp .
                            355 ;--------------------------------------------------------
                            356 ; code
                            357 ;--------------------------------------------------------
                            358 	.area CSEG    (CODE)
                            359 ;------------------------------------------------------------
                            360 ;Allocation info for local variables in function 'main'
                            361 ;------------------------------------------------------------
                            362 ;------------------------------------------------------------
                            363 ;	Z:\Pulpit\sw\11\1.c:21: int main(){
                            364 ;	-----------------------------------------
                            365 ;	 function main
                            366 ;	-----------------------------------------
   0000                     367 _main:
                    0002    368 	ar2 = 0x02
                    0003    369 	ar3 = 0x03
                    0004    370 	ar4 = 0x04
                    0005    371 	ar5 = 0x05
                    0006    372 	ar6 = 0x06
                    0007    373 	ar7 = 0x07
                    0000    374 	ar0 = 0x00
                    0001    375 	ar1 = 0x01
                            376 ;	Z:\Pulpit\sw\11\1.c:23: TMOD=1;
   0000 75 89 01            377 	mov	_TMOD,#0x01
                            378 ;	Z:\Pulpit\sw\11\1.c:24: TH0=czas/256;
   0003 75 8C FD            379 	mov	_TH0,#0xFD
                            380 ;	Z:\Pulpit\sw\11\1.c:25: TL0=czas%256;
   0006 75 8A 18            381 	mov	_TL0,#0x18
                            382 ;	Z:\Pulpit\sw\11\1.c:26: TR0=1;
   0009 D2 8C               383 	setb	_TR0
                            384 ;	Z:\Pulpit\sw\11\1.c:27: ET0=1;
   000B D2 A9               385 	setb	_ET0
                            386 ;	Z:\Pulpit\sw\11\1.c:28: EX1=1;
   000D D2 AA               387 	setb	_EX1
                            388 ;	Z:\Pulpit\sw\11\1.c:29: EX0=1;
   000F D2 A8               389 	setb	_EX0
                            390 ;	Z:\Pulpit\sw\11\1.c:30: PT0=1;
   0011 D2 B9               391 	setb	_PT0
                            392 ;	Z:\Pulpit\sw\11\1.c:31: EA=1;
   0013 D2 AF               393 	setb	_EA
                            394 ;	Z:\Pulpit\sw\11\1.c:33: Bufor[0]=blank;
   0015 75*01 0A            395 	mov	_Bufor,#0x0A
                            396 ;	Z:\Pulpit\sw\11\1.c:34: Bufor[1]=1;
   0018 75*02 01            397 	mov	(_Bufor + 0x0001),#0x01
                            398 ;	Z:\Pulpit\sw\11\1.c:35: Bufor[2]=2;
   001B 75*03 02            399 	mov	(_Bufor + 0x0002),#0x02
                            400 ;	Z:\Pulpit\sw\11\1.c:36: Bufor[3]=3;
   001E 75*04 03            401 	mov	(_Bufor + 0x0003),#0x03
                            402 ;	Z:\Pulpit\sw\11\1.c:37: Bufor[4]=blank;
   0021 75*05 0A            403 	mov	(_Bufor + 0x0004),#0x0A
                            404 ;	Z:\Pulpit\sw\11\1.c:38: Bufor[5]=blank;
   0024 75*06 0A            405 	mov	(_Bufor + 0x0005),#0x0A
                            406 ;	Z:\Pulpit\sw\11\1.c:39: Bufor[6]=blank;
   0027 75*07 0A            407 	mov	(_Bufor + 0x0006),#0x0A
                            408 ;	Z:\Pulpit\sw\11\1.c:40: Bufor[7]=blank;
   002A 75*08 0A            409 	mov	(_Bufor + 0x0007),#0x0A
                            410 ;	Z:\Pulpit\sw\11\1.c:42: while(1);
   002D                     411 00102$:
   002D 80 FE               412 	sjmp	00102$
                            413 ;------------------------------------------------------------
                            414 ;Allocation info for local variables in function 'timer0'
                            415 ;------------------------------------------------------------
                            416 ;------------------------------------------------------------
                            417 ;	Z:\Pulpit\sw\11\1.c:49: void timer0(void)__interrupt(1)__using(1)
                            418 ;	-----------------------------------------
                            419 ;	 function timer0
                            420 ;	-----------------------------------------
   002F                     421 _timer0:
                    000A    422 	ar2 = 0x0a
                    000B    423 	ar3 = 0x0b
                    000C    424 	ar4 = 0x0c
                    000D    425 	ar5 = 0x0d
                    000E    426 	ar6 = 0x0e
                    000F    427 	ar7 = 0x0f
                    0008    428 	ar0 = 0x08
                    0009    429 	ar1 = 0x09
   002F C0 E0               430 	push	acc
   0031 C0 82               431 	push	dpl
   0033 C0 83               432 	push	dph
   0035 C0 D0               433 	push	psw
   0037 75 D0 08            434 	mov	psw,#0x08
                            435 ;	Z:\Pulpit\sw\11\1.c:51: TH0=czas/256;
   003A 75 8C FD            436 	mov	_TH0,#0xFD
                            437 ;	Z:\Pulpit\sw\11\1.c:52: TL0=czas%256;
   003D 75 8A 18            438 	mov	_TL0,#0x18
                            439 ;	Z:\Pulpit\sw\11\1.c:54: if(++count>5)
   0040 05*05               440 	inc	_count
   0042 E4                  441 	clr	a
   0043 B5*05 02            442 	cjne	a,_count,00109$
   0046 05*06               443 	inc	(_count + 1)
   0048                     444 00109$:
   0048 C3                  445 	clr	c
   0049 74 05               446 	mov	a,#0x05
   004B 95*05               447 	subb	a,_count
   004D E4                  448 	clr	a
   004E 95*06               449 	subb	a,(_count + 1)
   0050 50 26               450 	jnc	00104$
                            451 ;	Z:\Pulpit\sw\11\1.c:56: portAnod= tablicaAnod[Licznik];
   0052 E5*00               452 	mov	a,_Licznik
   0054 90s00r00            453 	mov	dptr,#_tablicaAnod
   0057 93                  454 	movc	a,@a+dptr
   0058 F5 80               455 	mov	_P0,a
                            456 ;	Z:\Pulpit\sw\11\1.c:57: portSek=TablicaZnakow[Bufor[Licznik]];
   005A E5*00               457 	mov	a,_Licznik
   005C 24r01               458 	add	a,#_Bufor
   005E F8                  459 	mov	r0,a
   005F E6                  460 	mov	a,@r0
   0060 FA                  461 	mov	r2,a
   0061 90s00r04            462 	mov	dptr,#_TablicaZnakow
   0064 93                  463 	movc	a,@a+dptr
   0065 F5 A0               464 	mov	_P2,a
                            465 ;	Z:\Pulpit\sw\11\1.c:58: Licznik++;
   0067 05*00               466 	inc	_Licznik
                            467 ;	Z:\Pulpit\sw\11\1.c:60: if(Licznik >3)Licznik=0;
   0069 74 03               468 	mov	a,#0x03
   006B B5*00 00            469 	cjne	a,_Licznik,00111$
   006E                     470 00111$:
   006E 50 03               471 	jnc	00102$
   0070 75*00 00            472 	mov	_Licznik,#0x00
   0073                     473 00102$:
                            474 ;	Z:\Pulpit\sw\11\1.c:61: count=0;
   0073 E4                  475 	clr	a
   0074 F5*05               476 	mov	_count,a
   0076 F5*06               477 	mov	(_count + 1),a
   0078                     478 00104$:
                            479 ;	Z:\Pulpit\sw\11\1.c:63: flagaL=1;
   0078 75*0B 01            480 	mov	_flagaL,#0x01
                            481 ;	Z:\Pulpit\sw\11\1.c:64: flagaR=1;
   007B 75*0C 01            482 	mov	_flagaR,#0x01
   007E D0 D0               483 	pop	psw
   0080 D0 83               484 	pop	dph
   0082 D0 82               485 	pop	dpl
   0084 D0 E0               486 	pop	acc
   0086 32                  487 	reti
                            488 ;	eliminated unneeded push/pop b
                            489 ;------------------------------------------------------------
                            490 ;Allocation info for local variables in function 'buttonL'
                            491 ;------------------------------------------------------------
                            492 ;------------------------------------------------------------
                            493 ;	Z:\Pulpit\sw\11\1.c:67: void buttonL(void)__interrupt(0)__using(1){
                            494 ;	-----------------------------------------
                            495 ;	 function buttonL
                            496 ;	-----------------------------------------
   0087                     497 _buttonL:
   0087 C0 E0               498 	push	acc
   0089 C0 D0               499 	push	psw
   008B 75 D0 08            500 	mov	psw,#0x08
                            501 ;	Z:\Pulpit\sw\11\1.c:68: TH0=czas/256;
   008E 75 8C FD            502 	mov	_TH0,#0xFD
                            503 ;	Z:\Pulpit\sw\11\1.c:69: TL0=czas%256;
   0091 75 8A 18            504 	mov	_TL0,#0x18
                            505 ;	Z:\Pulpit\sw\11\1.c:70: if (flagaL==1)
   0094 74 01               506 	mov	a,#0x01
   0096 B5*0B 16            507 	cjne	a,_flagaL,00105$
                            508 ;	Z:\Pulpit\sw\11\1.c:72: flagaL=0;
   0099 75*0B 00            509 	mov	_flagaL,#0x00
                            510 ;	Z:\Pulpit\sw\11\1.c:73: if(Liczba2<9)
   009C C3                  511 	clr	c
   009D E5*09               512 	mov	a,_Liczba2
   009F 94 09               513 	subb	a,#0x09
   00A1 E5*0A               514 	mov	a,(_Liczba2 + 1)
   00A3 94 00               515 	subb	a,#0x00
   00A5 50 08               516 	jnc	00105$
                            517 ;	Z:\Pulpit\sw\11\1.c:74: Liczba2++;
   00A7 05*09               518 	inc	_Liczba2
   00A9 E4                  519 	clr	a
   00AA B5*09 02            520 	cjne	a,_Liczba2,00112$
   00AD 05*0A               521 	inc	(_Liczba2 + 1)
   00AF                     522 00112$:
   00AF                     523 00105$:
   00AF D0 D0               524 	pop	psw
   00B1 D0 E0               525 	pop	acc
   00B3 32                  526 	reti
                            527 ;	eliminated unneeded push/pop dpl
                            528 ;	eliminated unneeded push/pop dph
                            529 ;	eliminated unneeded push/pop b
                            530 ;------------------------------------------------------------
                            531 ;Allocation info for local variables in function 'buttonR'
                            532 ;------------------------------------------------------------
                            533 ;------------------------------------------------------------
                            534 ;	Z:\Pulpit\sw\11\1.c:78: void buttonR(void)__interrupt(2)__using(1){
                            535 ;	-----------------------------------------
                            536 ;	 function buttonR
                            537 ;	-----------------------------------------
   00B4                     538 _buttonR:
   00B4 C0 E0               539 	push	acc
   00B6 C0 D0               540 	push	psw
   00B8 75 D0 08            541 	mov	psw,#0x08
                            542 ;	Z:\Pulpit\sw\11\1.c:79: TH0=czas/256;
   00BB 75 8C FD            543 	mov	_TH0,#0xFD
                            544 ;	Z:\Pulpit\sw\11\1.c:80: TL0=czas%256;
   00BE 75 8A 18            545 	mov	_TL0,#0x18
                            546 ;	Z:\Pulpit\sw\11\1.c:81: if (flagaR==1){
   00C1 74 01               547 	mov	a,#0x01
   00C3 B5*0C 16            548 	cjne	a,_flagaR,00105$
                            549 ;	Z:\Pulpit\sw\11\1.c:82: flagaR=0;
   00C6 75*0C 00            550 	mov	_flagaR,#0x00
                            551 ;	Z:\Pulpit\sw\11\1.c:83: if(Liczba<9)
   00C9 C3                  552 	clr	c
   00CA E5*07               553 	mov	a,_Liczba
   00CC 94 09               554 	subb	a,#0x09
   00CE E5*08               555 	mov	a,(_Liczba + 1)
   00D0 94 00               556 	subb	a,#0x00
   00D2 50 08               557 	jnc	00105$
                            558 ;	Z:\Pulpit\sw\11\1.c:84: Liczba++;
   00D4 05*07               559 	inc	_Liczba
   00D6 E4                  560 	clr	a
   00D7 B5*07 02            561 	cjne	a,_Liczba,00112$
   00DA 05*08               562 	inc	(_Liczba + 1)
   00DC                     563 00112$:
   00DC                     564 00105$:
   00DC D0 D0               565 	pop	psw
   00DE D0 E0               566 	pop	acc
   00E0 32                  567 	reti
                            568 ;	eliminated unneeded push/pop dpl
                            569 ;	eliminated unneeded push/pop dph
                            570 ;	eliminated unneeded push/pop b
                            571 	.area CSEG    (CODE)
                            572 	.area CONST   (CODE)
   0000                     573 _tablicaAnod:
   0000 0E                  574 	.db #0x0E	; 14
   0001 0D                  575 	.db #0x0D	; 13
   0002 0B                  576 	.db #0x0B	; 11
   0003 07                  577 	.db #0x07	; 7
   0004                     578 _TablicaZnakow:
   0004 03                  579 	.db #0x03	; 3
   0005 9F                  580 	.db #0x9F	; 159
   0006 25                  581 	.db #0x25	; 37
   0007 0D                  582 	.db #0x0D	; 13
   0008 99                  583 	.db #0x99	; 153
   0009 49                  584 	.db #0x49	; 73	I
   000A 41                  585 	.db #0x41	; 65	A
   000B 1F                  586 	.db #0x1F	; 31
   000C 01                  587 	.db #0x01	; 1
   000D 09                  588 	.db #0x09	; 9
   000E FF                  589 	.db #0xFF	; 255
                            590 	.area XINIT   (CODE)
                            591 	.area CABS    (ABS,CODE)
